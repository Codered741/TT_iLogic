Sub Main()
'declarations
	Dim oDoc as Document = ThisApplication.ActiveDocument
	Dim compOcc as ComponentOccurrence
	customPropertySet = ThisDoc.Document.PropertySets.Item("Inventor User Defined Properties")

'Main
	
	SharedVariable("LogVar") = "Export PDF"
	iLogicVB.RunExternalRule("Write SV to Log.iLogicVB")
	
	If oDoc.FileSaveCounter >= 1 Then
		' Are we in a Drawing Document?
		If oDoc.DocumentType = kDrawingDocumentObject Then
			
			'get referenced documents of the drawing
			Dim oRefDocs As DocumentsEnumerator = oDoc.AllReferencedDocuments
			Dim oRefDoc As Document = oRefDocs.Item(1)
			Dim lPDF as New List(Of String)
			Dim oRefOLE As ReferencedOLEFileDescriptors = oDoc.ReferencedOLEFileDescriptors 
			
			'access properties of first referenced file
			oRefCPropSet = oRefDoc.PropertySets.Item("Inventor User Defined Properties")
			oCPropSet = oDoc.PropertySets.Item("Inventor User Defined Properties")
			
			'Check for property "PDF" on model and create it if not found.  
			Try 
				prop = oRefCPropSet.Item("PDF")
			Catch
				' Assume error means not found
				oRefCPropSet.Add(False, "PDF")
			End Try
			
			'Check for property "PDF" on drawing and create it if not found
			Try
				prop = oCPropSet.Item("PDF")
			Catch
				oCPropSet.Add(False, "PDF")
			End Try
		
			Dim dPDF = oCPropSet.Item("PDF")
			dim mPDF = oRefCPropSet.Item("PDF")

			If VarType(dPDF.Value) <> vbBoolean Then
				dPDF.Delete
				oCPropSet.Add(False, "PDF")
				dPDF = oCPropSet.Item("PDF")
			End If

			If VarType(mPDF.Value) <> vbBoolean Then
				mPDF.Delete
				oRefCPropSet.Add(False, "PDF")
				mPDF = oRefCPropSet.Item("PDF")
			End If
			
			'Check iproperty to see if rule has been run, warn user if it has.  
			If mPDF.Value = True OrElse dPDF.Value = True Then
			'check to ensure that DXF OLE's are actually attached.  
				For Each oRef In oRefOLE
					If oRef.OLEDocumentType = 3331 AndAlso oRef.FullFileName.Contains(".pdf") Then
						lPDF.Add(oRef.FullFileName)
					End If
				Next	
			
				If lPDF.Count > 0 Then
					'warn if file has already been created, and proceed according to user input					
					usrContinue = MessageBox.Show("A PDF has already been created.  The PDF must be checked out to continue.  Are you sure you want to continue?", "Existing File!",MessageBoxButtons.OKCancel)
					If usrContinue = vbCancel Then
						Exit Sub
					End If
					mPDF.Value = True
				Else
					'try to fix the problem
					copiedFile = MessageBox.Show("It appears that either the drawing or part has been copied.  Is this True? ", "Copied file?", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
					If copiedFile = vbYes Then
						dPDF.Value = False
						mPDF.Value = False
						MessageBox.Show("Please re-run the rule.  ", "Reset complete", MessageBoxButtons.OK)
						Exit Sub
					Else
						MessageBox.Show("There is something wrong.  Please contact a Vault Administrator for assistance.  ", "GET HELP!!!", MessageBoxButtons.OK, MessageBoxIcon.Error)
						ThisDoc.Launch("C:\_vaultWIP\Designs\Templates\Library\iLogic\Special\spiderdick.jpg")
						SharedVariable("LogVar") = "SPIDERDICK"
						iLogicVB.RunExternalRule("Write SV to Log.iLogicVB")
						Exit Sub
					End If
				End If
			End If

			'http://inventortrenches.blogspot.com/2011/07/ilogic-To-save-pdf-files-To-New.html

			oPath = ThisDoc.Path
			oFileName = ThisDoc.FileName(False) 'without extension
			oPDFAddIn = ThisApplication.ApplicationAddIns.ItemById _
			("{0AC6FD96-2F4D-42CE-8BE0-8AEA580399E4}")
			oDocument = ThisApplication.ActiveDocument
			oContext = ThisApplication.TransientObjects.CreateTranslationContext
			oContext.Type = IOMechanismEnum.kFileBrowseIOMechanism
			oOptions = ThisApplication.TransientObjects.CreateNameValueMap
			oDataMedium = ThisApplication.TransientObjects.CreateDataMedium

			If oPDFAddIn.HasSaveCopyAsOptions(oDataMedium, oContext, oOptions) Then
			oOptions.Value("All_Color_AS_Black") = 0
			oOptions.Value("Remove_Line_Weights") = 1
			oOptions.Value("Vector_Resolution") = 400
			oOptions.Value("Sheet_Range") = Inventor.PrintRangeEnum.kPrintAllSheets
			End If

			oDataMedium.FileName = oPath & "\" & oFileName & ".pdf"

			'Publish document
			Try
				oPDFAddIn.SaveCopyAs(oDocument, oContext, oOptions, oDataMedium)
			Catch
				MessageBox.Show("WHAT DID I JUST SAY!!!!  You do not have permission to write to this PDF, likely because you DIDNT CHECK IT OUT!!!!  ", "Permission Denied", MessageBoxButtons.OK, MessageBoxIcon.Error)
				Exit Sub
			End Try
			
			If mPDF.Value = False Then
			
				AttachFile = vbYes 'MessageBox.Show("Would you like to create this file as an attachment?", "Create Attachment?",MessageBoxButtons.YesNo,MessageBoxIcon.Question)
			
				If AttachFile = vbYes Then
				
					'attach PDF as OLE object, if it hasnt been already.  
					
					'Dim oDoc As DrawingDocument
						'oDoc = ThisApplication.ActiveDocument
							
						Dim kOLEDocumentLinkObject As ObjectTypeEnum
							kOLEDocumentLinkObject = 3331 'OLE link document
							
						oRefOLE.Add(oPath & "\" & oFileName & ".pdf", kOLEDocumentLinkObject)
						mPDF.Value = True
					
					End If
				
			End If
			
			'ThisDoc.Launch(oDataMedium.FileName)
			
		Else
		
			MessageBox.Show("This command can only be used in a Drawing.")
		
		End If
	Else
	
		MessageBox.Show("File must be saved to continue.", "File Not Saved",MessageBoxButtons.OK,MessageBoxIcon.Error)

	End If
End Sub